{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Welcome to the UpdateIP documentation site UpdateIP dynamically updates a record based on its public IP address. It is compatible with many DNS service providers. What is UpdateIP ? On a regular basis the IP address registered in the DNS server and the current public IP address and is updated if they are different. UpdateIP is written 100% in golang, it is light and can be executed on all types of X86, ARM architecture.","title":"Overview"},{"location":"#overview","text":"Welcome to the UpdateIP documentation site UpdateIP dynamically updates a record based on its public IP address. It is compatible with many DNS service providers.","title":"Overview"},{"location":"#what-is-updateip","text":"On a regular basis the IP address registered in the DNS server and the current public IP address and is updated if they are different. UpdateIP is written 100% in golang, it is light and can be executed on all types of X86, ARM architecture.","title":"What is UpdateIP ?"},{"location":"getting-started/","text":"Getting started Docker The easiest and fastest way to get started with updateip is to use its docker image. You can run the image with the following command : docker run -itd \\ -v \"./config.yaml:/config/config.yaml\" \\ ghcr.io/azrod/updateip:latest Basic configuration Create the config.yaml configuration file config.yaml log : level : debug # Available : trace debug info warn error fatal panic humanize : true # Default: false # >> Here Setup your provider << Setup your provider Go to the provider documentation to setup your provider.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"getting-started/#docker","text":"The easiest and fastest way to get started with updateip is to use its docker image. You can run the image with the following command : docker run -itd \\ -v \"./config.yaml:/config/config.yaml\" \\ ghcr.io/azrod/updateip:latest","title":"Docker"},{"location":"getting-started/#basic-configuration","text":"Create the config.yaml configuration file config.yaml log : level : debug # Available : trace debug info warn error fatal panic humanize : true # Default: false # >> Here Setup your provider <<","title":"Basic configuration"},{"location":"getting-started/#setup-your-provider","text":"Go to the provider documentation to setup your provider.","title":"Setup your provider"},{"location":"advanced/dns/","text":"Advanced - DNS OpenDNS offer service to get your external IP address by DNS query. UpdateIP use this service to get your external IP address. This is a representation of the DNS Client in bash. dig +short myip.opendns.com @208.67.222.222 // GetMyExternalIP returns the external IP address of the local machine. func GetMyExternalIP () ( ip net . IP , err error ) { r := & net . Resolver { PreferGo : true , Dial : func ( ctx context . Context , network , address string ) ( net . Conn , error ) { d := net . Dialer { Timeout : time . Millisecond * time . Duration ( 10000 ), } return d . DialContext ( ctx , network , \"208.67.222.222:53\" ) }, } xIP , err := r . LookupHost ( context . Background (), \"myip.opendns.com\" ) if err != nil { return net . IP {}, err } return net . ParseIP ( xIP [ 0 ]), err } UpdateIP use also the DNS Client to get status of the DNS record. The configuration of the DNS server used is therefore important. If you running UpdateIP from a Docker container, you can use the following command to get the configuration of the DNS server used: On docker run command use --dns x.x.x.x to set manual DNS server for this container. On Docker compose use a following parameters to set manual DNS server for this container. version: '3.8' services: updateip: container_name: updateaip image: ghcr.io/azrod/updateip:latest volumes: - ./config.yaml:/config/config.yaml:ro dns: - x.x.x.x environnement: - LOG_LEVEL = debug - LOG_HUMANIZE = true - METRICS_ENABLE = true - METRICS_PORT = 8080 - METRICS_HOST = 0 .0.0.0 port: - \"8080:8080\" restart: always","title":"DNS"},{"location":"advanced/dns/#advanced-dns","text":"OpenDNS offer service to get your external IP address by DNS query. UpdateIP use this service to get your external IP address. This is a representation of the DNS Client in bash. dig +short myip.opendns.com @208.67.222.222 // GetMyExternalIP returns the external IP address of the local machine. func GetMyExternalIP () ( ip net . IP , err error ) { r := & net . Resolver { PreferGo : true , Dial : func ( ctx context . Context , network , address string ) ( net . Conn , error ) { d := net . Dialer { Timeout : time . Millisecond * time . Duration ( 10000 ), } return d . DialContext ( ctx , network , \"208.67.222.222:53\" ) }, } xIP , err := r . LookupHost ( context . Background (), \"myip.opendns.com\" ) if err != nil { return net . IP {}, err } return net . ParseIP ( xIP [ 0 ]), err } UpdateIP use also the DNS Client to get status of the DNS record. The configuration of the DNS server used is therefore important. If you running UpdateIP from a Docker container, you can use the following command to get the configuration of the DNS server used: On docker run command use --dns x.x.x.x to set manual DNS server for this container. On Docker compose use a following parameters to set manual DNS server for this container. version: '3.8' services: updateip: container_name: updateaip image: ghcr.io/azrod/updateip:latest volumes: - ./config.yaml:/config/config.yaml:ro dns: - x.x.x.x environnement: - LOG_LEVEL = debug - LOG_HUMANIZE = true - METRICS_ENABLE = true - METRICS_PORT = 8080 - METRICS_HOST = 0 .0.0.0 port: - \"8080:8080\" restart: always","title":"Advanced - DNS"},{"location":"advanced/metrics/","text":"Metrics Different metrics are available. Metrics are organized into different categories. Categories : Global Per-Providers How to enable and configure metrics server You have some options to enable metrics server. Config File Options Default Required Actions metrics.enable false Define if start metrics web server metrics.host 0.0.0.0 Set IP address for metrics web server metrics.port 8080 Set port for metrics web server metrics.path /metrics Path for acceding to metrics web server metrics.logging false Logging request http endpoint metrics.logging If you enable metrics.logging , you will see a lot of logs. config.yaml metrics : enable : true # Default: false port : 8080 # Default : 8080 host : 0.0.0.0 # Default: 0.0.0.0 path : /metrics # Default: /metrics Env Variables Options Actions METRICS_ENABLE Define if start metrics web server METRICS_HOST Set IP address for metrics web server METRICS_PORT Set port for metrics web server METRICS_PATH Path for acceding to metrics web server METRICS_LOGGING Logging request http on endpoint exemple METRICS_ENABLE = true ./updateip Metrics details Global Metrics Name Description go_build_info Build information about the main Go module go_gc_duration_seconds Go garbage collection duration go_goroutines Number of goroutines go_info Go runtime information go_memstats_* Go runtime memory statistics go_threads Number of threads AWS Provider Metrics Name Description updateip_aws_func_time Execution time of each function updateip_aws_status Return Status of AWS Provider updateip_aws_update Number of DNS record validity checks updateip_aws_event_receive Count of events received Cloudflare Provider Metrics Name Description updateip_cloudflare_func_time Execution time of each function updateip_cloudflare_status Return Status of Cloudflare Provider updateip_cloudflare_update Number of DNS record validity checks updateip_cloudflare_event_receive Count of events received OVH Provider Metrics Name Description updateip_ovh_func_time Execution time of each function updateip_ovh_status Return Status of OVH Provider updateip_ovh_update Number of DNS record validity checks updateip_ovh_event_receive Count of events received","title":"Metrics"},{"location":"advanced/metrics/#metrics","text":"Different metrics are available. Metrics are organized into different categories. Categories : Global Per-Providers","title":"Metrics"},{"location":"advanced/metrics/#how-to-enable-and-configure-metrics-server","text":"You have some options to enable metrics server.","title":"How to enable and configure metrics server"},{"location":"advanced/metrics/#config-file","text":"Options Default Required Actions metrics.enable false Define if start metrics web server metrics.host 0.0.0.0 Set IP address for metrics web server metrics.port 8080 Set port for metrics web server metrics.path /metrics Path for acceding to metrics web server metrics.logging false Logging request http endpoint metrics.logging If you enable metrics.logging , you will see a lot of logs. config.yaml metrics : enable : true # Default: false port : 8080 # Default : 8080 host : 0.0.0.0 # Default: 0.0.0.0 path : /metrics # Default: /metrics","title":"Config File"},{"location":"advanced/metrics/#env-variables","text":"Options Actions METRICS_ENABLE Define if start metrics web server METRICS_HOST Set IP address for metrics web server METRICS_PORT Set port for metrics web server METRICS_PATH Path for acceding to metrics web server METRICS_LOGGING Logging request http on endpoint exemple METRICS_ENABLE = true ./updateip","title":"Env Variables"},{"location":"advanced/metrics/#metrics-details","text":"","title":"Metrics details"},{"location":"advanced/metrics/#global","text":"Metrics Name Description go_build_info Build information about the main Go module go_gc_duration_seconds Go garbage collection duration go_goroutines Number of goroutines go_info Go runtime information go_memstats_* Go runtime memory statistics go_threads Number of threads","title":"Global"},{"location":"advanced/metrics/#aws-provider","text":"Metrics Name Description updateip_aws_func_time Execution time of each function updateip_aws_status Return Status of AWS Provider updateip_aws_update Number of DNS record validity checks updateip_aws_event_receive Count of events received","title":"AWS Provider"},{"location":"advanced/metrics/#cloudflare-provider","text":"Metrics Name Description updateip_cloudflare_func_time Execution time of each function updateip_cloudflare_status Return Status of Cloudflare Provider updateip_cloudflare_update Number of DNS record validity checks updateip_cloudflare_event_receive Count of events received","title":"Cloudflare Provider"},{"location":"advanced/metrics/#ovh-provider","text":"Metrics Name Description updateip_ovh_func_time Execution time of each function updateip_ovh_status Return Status of OVH Provider updateip_ovh_update Number of DNS record validity checks updateip_ovh_event_receive Count of events received","title":"OVH Provider"},{"location":"providers/","text":"Providers A lot of providers are available. AWS Cloudflare OVH","title":"Providers"},{"location":"providers/#providers","text":"A lot of providers are available. AWS Cloudflare OVH","title":"Providers"},{"location":"providers/aws/","text":"AWS Route 53 Provider Requirements AWS Access Key Setup IAM policy Get AWS Access Key Warning It's recommended to create dedicated user Select your user in the AWS console and click on the Access Keys tab. Create a new access key and copy the Access Key ID and Secret Access Key. Setup IAM policy Associate the IAM policy with the user. IAM POLICY { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"VisualEditor0\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"route53:GetChange\" , \"route53:GetHostedZone\" , \"route53:ListResourceRecordSets\" ], \"Resource\" : [ \"arn:aws:route53:::hostedzone/*\" , \"arn:aws:route53:::change/*\" , \"arn:aws:route53:::trafficpolicy/*\" ] }, { \"Sid\" : \"VisualEditor1\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"route53:ListHostedZones\" , \"route53:GetHostedZoneCount\" , \"route53:ListHostedZonesByName\" , \"route53:ChangeResourceRecordSets\" ], \"Resource\" : \"*\" } ] }","title":"AWS Route 53"},{"location":"providers/aws/#aws-route-53-provider","text":"","title":"AWS Route 53 Provider"},{"location":"providers/aws/#requirements","text":"AWS Access Key Setup IAM policy","title":"Requirements"},{"location":"providers/aws/#get-aws-access-key","text":"Warning It's recommended to create dedicated user Select your user in the AWS console and click on the Access Keys tab. Create a new access key and copy the Access Key ID and Secret Access Key.","title":"Get AWS Access Key"},{"location":"providers/aws/#setup-iam-policy","text":"Associate the IAM policy with the user. IAM POLICY { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"VisualEditor0\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"route53:GetChange\" , \"route53:GetHostedZone\" , \"route53:ListResourceRecordSets\" ], \"Resource\" : [ \"arn:aws:route53:::hostedzone/*\" , \"arn:aws:route53:::change/*\" , \"arn:aws:route53:::trafficpolicy/*\" ] }, { \"Sid\" : \"VisualEditor1\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"route53:ListHostedZones\" , \"route53:GetHostedZoneCount\" , \"route53:ListHostedZonesByName\" , \"route53:ChangeResourceRecordSets\" ], \"Resource\" : \"*\" } ] }","title":"Setup IAM policy"},{"location":"providers/cloudflare/","text":"Cloudflare Provider shortly","title":"Cloudflare"},{"location":"providers/cloudflare/#cloudflare-provider","text":"","title":"Cloudflare Provider"},{"location":"providers/cloudflare/#shortly","text":"","title":"shortly"},{"location":"providers/ovh/","text":"OVH Provider shortly","title":"OVH"},{"location":"providers/ovh/#ovh-provider","text":"","title":"OVH Provider"},{"location":"providers/ovh/#shortly","text":"","title":"shortly"},{"location":"setup/configfile/","text":"Configuration File See all options available in configuration file. By default Update loads the configuration file into the /config directory and the configuration file is called config.yaml . it is possible to change the directory and the configuration file which are called when the program starts. PATH_CONFIG_DIRECTORY : directory where the configuration file is located. PATH_CONFIG_FILE : configuration file name. All options available Options Default Required Actions log.level info Set Log Level (accept trace, debug, info, warn, error, fatal) log.humanize false Set human log format metrics.enable false Define if start metrics web server metrics.host 0.0.0.0 Set IP address for metrics web server metrics.port 8080 Set port for metrics web server metrics.path /metrics Path for acceding to metrics web server metrics.logging false Logging request http endpoint providers.aws.enable false Enable AWS Route 53 Provider providers.aws.secret.access_key_id \"\" AccessKey for AWS Account providers.aws.secret.secret_access_key \"\" SecretKey for AWS Account providers.aws.secret.region \"\" Region for your domain providers.aws.record.name \"\" FQDN record (ex.domain.com) providers.aws.record.domain \"\" Domain Name (domain.com) providers.aws.record.hosted_zone_id \"\" HostedZoneID of your domain providers.ovh.enable false Enable OVH Provider providers.ovh.secret.application_key \"\" Application Key for OVH Account providers.ovh.secret.application_secret \"\" Application Secret for OVH Account providers.ovh.secret.consumer_key \"\" Consumer Key for OVH Account providers.ovh.secret.region \"\" Region for your domain providers.ovh.record.name \"\" FQDN record (ex.domain.com) providers.ovh.record.zone \"\" DNS Zone (domain.com) providers.cloudflare.enable false Enable Cloudflare Provider providers.cloudflare.secret.api_key \"\" API Key for cloudflare Account providers.cloudflare.secret.email \"\" Email for Cloudfalre Account providers.cloudflare.record.name \"\" FQDN record (ex.domain.com) providers.cloudflare.record.domain \"\" DNS Zone (domain.com) providers.cloudfalre.record.zone_id \"\" ID DNS Zone log : level : debug # Available : trace debug info warn error fatal panic humanize : true # Default: false metrics : enable : true # Default: false port : 8080 # Default : 8080 host : 0.0.0.0 # Default: 0.0.0.0 path : /metrics # Default: /metrics logging : true # Default: false providers : aws_account : enable : true secret : access_key_id : \"xxx\" secret_access_key : \"xxx\" region : \"eu-west-1\" record : name : \"subdomain.domain.com\" ttl : 60 domain : \"domain.com\" ovh_account : enable : true secret : application_key : \"xxx\" application_secret : \"xxx\" consumer_key : \"xxx\" region : \"eu-west-1\" record : name : \"subdomain.domain.com\" ttl : 60 zone : \"domain.com\" cloudflare_account : enable : true secret : api_key : \"xxx\" email : \"xxx\" record : name : \"subdomain.domain.com\" ttl : 60 domain : \"domain.com\"","title":"Config File"},{"location":"setup/configfile/#configuration-file","text":"See all options available in configuration file. By default Update loads the configuration file into the /config directory and the configuration file is called config.yaml . it is possible to change the directory and the configuration file which are called when the program starts. PATH_CONFIG_DIRECTORY : directory where the configuration file is located. PATH_CONFIG_FILE : configuration file name.","title":"Configuration File"},{"location":"setup/configfile/#all-options-available","text":"Options Default Required Actions log.level info Set Log Level (accept trace, debug, info, warn, error, fatal) log.humanize false Set human log format metrics.enable false Define if start metrics web server metrics.host 0.0.0.0 Set IP address for metrics web server metrics.port 8080 Set port for metrics web server metrics.path /metrics Path for acceding to metrics web server metrics.logging false Logging request http endpoint providers.aws.enable false Enable AWS Route 53 Provider providers.aws.secret.access_key_id \"\" AccessKey for AWS Account providers.aws.secret.secret_access_key \"\" SecretKey for AWS Account providers.aws.secret.region \"\" Region for your domain providers.aws.record.name \"\" FQDN record (ex.domain.com) providers.aws.record.domain \"\" Domain Name (domain.com) providers.aws.record.hosted_zone_id \"\" HostedZoneID of your domain providers.ovh.enable false Enable OVH Provider providers.ovh.secret.application_key \"\" Application Key for OVH Account providers.ovh.secret.application_secret \"\" Application Secret for OVH Account providers.ovh.secret.consumer_key \"\" Consumer Key for OVH Account providers.ovh.secret.region \"\" Region for your domain providers.ovh.record.name \"\" FQDN record (ex.domain.com) providers.ovh.record.zone \"\" DNS Zone (domain.com) providers.cloudflare.enable false Enable Cloudflare Provider providers.cloudflare.secret.api_key \"\" API Key for cloudflare Account providers.cloudflare.secret.email \"\" Email for Cloudfalre Account providers.cloudflare.record.name \"\" FQDN record (ex.domain.com) providers.cloudflare.record.domain \"\" DNS Zone (domain.com) providers.cloudfalre.record.zone_id \"\" ID DNS Zone log : level : debug # Available : trace debug info warn error fatal panic humanize : true # Default: false metrics : enable : true # Default: false port : 8080 # Default : 8080 host : 0.0.0.0 # Default: 0.0.0.0 path : /metrics # Default: /metrics logging : true # Default: false providers : aws_account : enable : true secret : access_key_id : \"xxx\" secret_access_key : \"xxx\" region : \"eu-west-1\" record : name : \"subdomain.domain.com\" ttl : 60 domain : \"domain.com\" ovh_account : enable : true secret : application_key : \"xxx\" application_secret : \"xxx\" consumer_key : \"xxx\" region : \"eu-west-1\" record : name : \"subdomain.domain.com\" ttl : 60 zone : \"domain.com\" cloudflare_account : enable : true secret : api_key : \"xxx\" email : \"xxx\" record : name : \"subdomain.domain.com\" ttl : 60 domain : \"domain.com\"","title":"All options available"},{"location":"setup/docker-compose/","text":"Docker Compose Docker image is stored in GitHub Images is available for Arch : linux/amd64 linux/arm linux/arm64 Setup compose file version: '3.8' services: updateip: container_name: updateaip image: ghcr.io/azrod/updateip:latest volumes: - ./config.yaml:/config/config.yaml:ro environnement: - LOG_LEVEL = debug - LOG_HUMANIZE = true - METRICS_ENABLE = true - METRICS_PORT = 8080 - METRICS_HOST = 0 .0.0.0 port: - \"8080:8080\" restart: always See all available environment variables","title":"Docker Compose"},{"location":"setup/docker-compose/#docker-compose","text":"Docker image is stored in GitHub Images is available for Arch : linux/amd64 linux/arm linux/arm64","title":"Docker Compose"},{"location":"setup/docker-compose/#setup-compose-file","text":"version: '3.8' services: updateip: container_name: updateaip image: ghcr.io/azrod/updateip:latest volumes: - ./config.yaml:/config/config.yaml:ro environnement: - LOG_LEVEL = debug - LOG_HUMANIZE = true - METRICS_ENABLE = true - METRICS_PORT = 8080 - METRICS_HOST = 0 .0.0.0 port: - \"8080:8080\" restart: always See all available environment variables","title":"Setup compose file"},{"location":"setup/docker/","text":"Docker Docker image is stored in GitHub Images is available for Arch : linux/amd64 linux/arm linux/arm64 Basic running docker run -itd \\ -v \"./config.yaml:/config/config.yaml\" \\ ghcr.io/azrod/updateip:latest Advanced running You can load the configuration via the configuration file and / or by environment variables See all available environment variables docker run -itd \\ -v \"./config.yaml:/config/config.yaml\" \\ -e \"LOG_LEVEL=debug\" \\ -e \"LOG_HUMANIZE=true\" \\ -e \"METRICS_ENABLE=true\" \\ -p \"8080:8080\" \\ ghcr.io/azrod/updateip:latest","title":"Docker"},{"location":"setup/docker/#docker","text":"Docker image is stored in GitHub Images is available for Arch : linux/amd64 linux/arm linux/arm64","title":"Docker"},{"location":"setup/docker/#basic-running","text":"docker run -itd \\ -v \"./config.yaml:/config/config.yaml\" \\ ghcr.io/azrod/updateip:latest","title":"Basic running"},{"location":"setup/docker/#advanced-running","text":"You can load the configuration via the configuration file and / or by environment variables See all available environment variables docker run -itd \\ -v \"./config.yaml:/config/config.yaml\" \\ -e \"LOG_LEVEL=debug\" \\ -e \"LOG_HUMANIZE=true\" \\ -e \"METRICS_ENABLE=true\" \\ -p \"8080:8080\" \\ ghcr.io/azrod/updateip:latest","title":"Advanced running"},{"location":"setup/envvars/","text":"Environnement variables All parameters can be overloaded by environment variables Options Actions PATH_CONFIG_DIRECTORY Directory where the configuration file is located PATH_CONFIG_FILE Configuration file name LOG_LEVEL Set Log Level (accept trace, debug, info, warn, error, fatal) LOG_HUMANIZE Set human log format METRICS_ENABLE Define if start metrics web server METRICS_HOST Set IP address for metrics web server METRICS_PORT Set port for metrics web server METRICS_PATH Path for acceding to metrics web server METRICS_LOGGING Logging request http on endpoint AWS_ACCOUNT_ENABLE Enable AWS Route 53 Provider AWS_ACCESS_KEY_ID AccessKey for AWS Account AWS_SECRET_ACCESS_KEY SecretKey for AWS Account AWS_REGION Region for your domain AWS_RECORD_NAME FQDN record (ex.domain.com) AWS_RECORD_DOMAIN Domain Name (domain.com) AWS_HOSTED_ZONE_ID HostedZoneID of your domain OVH_ACCOUNT_ENABLE Enable OVH Provider OVH_APPLICATION_KEY Application Key for OVH Account OVH_APPLICATION_SECRET Application Secret for OVH Account OVH_CONSUMER_KEY Consumer Key for OVH Account OVH_REGION Region for your domain OVH_RECORD_NAME FQDN record (ex.domain.com) OVH_RECORD_ZONE DNS Zone (domain.com) CLOUDFLARE_ACCOUNT_ENABLE Enable Cloudflare Provider CLOUDFLARE_API_KEY API Key for cloudflare Account CLOUDFLARE_EMAIL Email for Cloudfalre Account CLOUDFLARE_RECORD_NAME FQDN record (ex.domain.com) CLOUDFLARE_RECORD_DOMAIN DNS Zone (domain.com) CLOUDFLARE_RECORD_ZONEID ID DNS Zone","title":"Env vars"},{"location":"setup/envvars/#environnement-variables","text":"All parameters can be overloaded by environment variables Options Actions PATH_CONFIG_DIRECTORY Directory where the configuration file is located PATH_CONFIG_FILE Configuration file name LOG_LEVEL Set Log Level (accept trace, debug, info, warn, error, fatal) LOG_HUMANIZE Set human log format METRICS_ENABLE Define if start metrics web server METRICS_HOST Set IP address for metrics web server METRICS_PORT Set port for metrics web server METRICS_PATH Path for acceding to metrics web server METRICS_LOGGING Logging request http on endpoint AWS_ACCOUNT_ENABLE Enable AWS Route 53 Provider AWS_ACCESS_KEY_ID AccessKey for AWS Account AWS_SECRET_ACCESS_KEY SecretKey for AWS Account AWS_REGION Region for your domain AWS_RECORD_NAME FQDN record (ex.domain.com) AWS_RECORD_DOMAIN Domain Name (domain.com) AWS_HOSTED_ZONE_ID HostedZoneID of your domain OVH_ACCOUNT_ENABLE Enable OVH Provider OVH_APPLICATION_KEY Application Key for OVH Account OVH_APPLICATION_SECRET Application Secret for OVH Account OVH_CONSUMER_KEY Consumer Key for OVH Account OVH_REGION Region for your domain OVH_RECORD_NAME FQDN record (ex.domain.com) OVH_RECORD_ZONE DNS Zone (domain.com) CLOUDFLARE_ACCOUNT_ENABLE Enable Cloudflare Provider CLOUDFLARE_API_KEY API Key for cloudflare Account CLOUDFLARE_EMAIL Email for Cloudfalre Account CLOUDFLARE_RECORD_NAME FQDN record (ex.domain.com) CLOUDFLARE_RECORD_DOMAIN DNS Zone (domain.com) CLOUDFLARE_RECORD_ZONEID ID DNS Zone","title":"Environnement variables"},{"location":"setup/source/","text":"Running UpdateIP from source UpdateIP is develloped in golang and can be executed from source. Golang 1.17 or later is required . cd /tmp/ git clone git@github.com:azrod/updateip.git && cd updateip go mod download go build PATH_CONFIG_DIRECTORY = $( pwd ) ./updateip See all available environment variables","title":"Source"},{"location":"setup/source/#running-updateip-from-source","text":"UpdateIP is develloped in golang and can be executed from source. Golang 1.17 or later is required . cd /tmp/ git clone git@github.com:azrod/updateip.git && cd updateip go mod download go build PATH_CONFIG_DIRECTORY = $( pwd ) ./updateip See all available environment variables","title":"Running UpdateIP from source"}]}